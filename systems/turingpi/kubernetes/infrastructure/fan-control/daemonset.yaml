apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fan-control
  namespace: kube-system
  labels:
    app: fan-control
spec:
  selector:
    matchLabels:
      app: fan-control
  template:
    metadata:
      labels:
        app: fan-control
    spec:
      # Run on all nodes (removed control plane restriction)
      # nodeSelector:
      #   node-role.kubernetes.io/control-plane: ""
      # Run as privileged to access hardware
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: fan-control
        image: busybox:1.35
        command: ["/bin/sh"]
        args:
        - -c
        - |
          # Wait for system to be ready
          sleep 30
          
          # Enable PWM control first
          echo 1 > /sys/devices/platform/pwm-fan/hwmon/hwmon1/pwm1_enable 2>/dev/null || true
          
          # Temperature thresholds (in millidegrees Celsius)
          TEMP_LOW=45000    # 45°C - start fans
          TEMP_HIGH=65000   # 65°C - max fans
          TEMP_CRITICAL=80000 # 80°C - emergency cooling
          
          # Fan speed mapping
          FAN_OFF=0
          FAN_LOW=60        # 25% speed for low temp
          FAN_MED=120       # 50% speed for medium temp
          FAN_HIGH=180      # 70% speed for high temp
          FAN_MAX=255       # 100% speed for critical temp
          
          echo "Smart fan control initialized - temperature thresholds: ${TEMP_LOW}°C (start), ${TEMP_HIGH}°C (max), ${TEMP_CRITICAL}°C (emergency)"
          
          # Function to get current temperature
          get_temp() {
            cat /sys/class/thermal/thermal_zone0/temp 2>/dev/null || echo "0"
          }
          
          # Function to set fan speed
          set_fan_speed() {
            local speed=$1
            echo $speed > /sys/devices/platform/pwm-fan/hwmon/hwmon1/pwm1 2>/dev/null || true
          }
          
          # Function to determine fan speed based on temperature
          get_fan_speed() {
            local temp=$1
            
            if [ $temp -lt $TEMP_LOW ]; then
              echo $FAN_OFF
            elif [ $temp -lt $TEMP_HIGH ]; then
              echo $FAN_LOW
            elif [ $temp -lt $TEMP_CRITICAL ]; then
              echo $FAN_MED
            else
              echo $FAN_HIGH
            fi
          }
          
          # Main fan control loop
          while true; do
            current_temp=$(get_temp)
            target_speed=$(get_fan_speed $current_temp)
            
            # Only change fan speed if it's different
            current_speed=$(cat /sys/devices/platform/pwm-fan/hwmon/hwmon1/pwm1 2>/dev/null || echo "0")
            
            if [ "$current_speed" != "$target_speed" ]; then
              set_fan_speed $target_speed
              echo "Temp: ${current_temp}°C -> Fan: ${target_speed}/255"
            fi
            
            # Check every 5 seconds for temperature changes (faster response)
            sleep 5
          done
        securityContext:
          privileged: true
        volumeMounts:
        - name: sysfs
          mountPath: /sys
        - name: thermal
          mountPath: /sys/class/thermal
      volumes:
      - name: sysfs
        hostPath:
          path: /sys
          type: Directory
      - name: thermal
        hostPath:
          path: /sys/class/thermal
          type: Directory
      # Restart policy for the pod
      restartPolicy: Always
      # Tolerations for all nodes including control plane nodes
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/worker
        operator: Exists
        effect: NoSchedule
